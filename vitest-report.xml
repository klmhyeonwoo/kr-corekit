<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="116" failures="0" errors="0" time="0.10210491">
    <testsuite name="package/commonUtil/isEmpty/index.test.ts" timestamp="2025-09-08T06:13:05.941Z" hostname="pkrvm7jw40e0xgp" tests="16" failures="0" errors="0" skipped="0" time="0.010319319">
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 문자열에 대해 false를 반환한다" time="0.003115472">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 0이 아닌 숫자에 대해 false를 반환한다" time="0.000696923">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 배열에 대해 false를 반환한다" time="0.000515123">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 0에 대해 false를 반환한다" time="0.000322353">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 객체에 대해 false를 반환한다" time="0.000473967">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 불린 값에 대해 false를 반환한다" time="0.000270105">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 문자열에 대해 true를 반환한다" time="0.000190786">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 배열에 대해 true를 반환한다" time="0.000180628">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 객체에 대해 true를 반환한다" time="0.000286946">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; null과 undefined에 대해 true를 반환한다" time="0.000387465">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; NaN을 처리한다" time="0.000190276">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; Date 객체를 처리한다" time="0.000239307">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; Set과 Map을 처리한다" time="0.000380962">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 함수를 처리한다" time="0.000522306">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 심볼을 처리한다" time="0.000252311">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 빈 심볼의 경우 true를 반환한다" time="0.000169637">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/isNull/index.test.ts" timestamp="2025-09-08T06:13:05.947Z" hostname="pkrvm7jw40e0xgp" tests="5" failures="0" errors="0" skipped="0" time="0.00422059">
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; null이 들어오는 경우 true를 반환한다." time="0.001692013">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; undefined이 들어오는 경우 false를 반환한다." time="0.000198522">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 빈 문자열이 들어오는 경우 false를 반환한다." time="0.000265576">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 공백 문자열이 들어오는 경우 false를 반환한다." time="0.000291265">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 0이 들어오는 경우 false를 반환한다." time="0.000325709">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/sleep/index.test.ts" timestamp="2025-09-08T06:13:05.948Z" hostname="pkrvm7jw40e0xgp" tests="4" failures="0" errors="0" skipped="0" time="0.010257196">
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 지정된 시간(ms) 이후에 resolve 되어야 한다" time="0.005077502">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 지정된 시간 이전에는 resolve 되면 안 된다" time="0.001734523">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; ms가 0일 때 다음 틱(tick)에 resolve 되어야 한다" time="0.000916664">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 음수 값은 0처럼 처리되어야 한다" time="0.000953472">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/subtract/index.test.ts" timestamp="2025-09-08T06:13:05.950Z" hostname="pkrvm7jw40e0xgp" tests="8" failures="0" errors="0" skipped="0" time="0.003970142">
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 두 양수를 올바르게 뺀다" time="0.001447025">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 여러 숫자를 순서대로 뺀다" time="0.000174346">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 음수를 포함한 뺄셈을 올바르게 처리한다" time="0.000259896">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수가 없을 때 0을 반환한다" time="0.00017114">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000142246">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 0을 포함한 뺄셈을 올바르게 처리한다" time="0.000217156">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000196297">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000187241">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/multiply/index.test.ts" timestamp="2025-09-08T06:13:05.952Z" hostname="pkrvm7jw40e0xgp" tests="9" failures="0" errors="0" skipped="0" time="0.00545573">
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 두 양수를 올바르게 곱한다" time="0.001731537">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 여러 숫자를 올바르게 곱한다" time="0.000232695">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 인수 중 0이 포함되면 0을 반환한다" time="0.000273621">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 음수를 올바르게 처리한다" time="0.00039624">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000162324">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수가 없을 때 1을 반환한다" time="0.000195566">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000237515">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000379229">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; Infinity(무한대)를 올바르게 처리한다" time="0.00035803">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/sum/index.test.ts" timestamp="2025-09-08T06:13:05.954Z" hostname="pkrvm7jw40e0xgp" tests="7" failures="0" errors="0" skipped="0" time="0.005147744">
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 기본 케이스 &gt; 1 + 2 + 3은 6이다." time="0.001669211">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 기본 케이스 &gt; 5 + 10 + 15는 30이다." time="0.000305571">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수가 없을 때 0을 반환한다" time="0.000345536">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000343282">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 음수를 포함한 덧셈을 올바르게 처리한다" time="0.000338653">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000276236">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000214601">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/clearNullProperties/index.test.ts" timestamp="2025-09-08T06:13:05.956Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.002769848">
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 Null이 객체에 존재한다면, Null이 없는 객체가 반환된다." time="0.001733991">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/deepFreeze/index.test.ts" timestamp="2025-09-08T06:13:05.957Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.002405307">
        <testcase classname="package/objectUtil/deepFreeze/index.test.ts" name="객체의 불변성이 유지된다." time="0.001330638">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/removeKey/index.test.ts" timestamp="2025-09-08T06:13:05.957Z" hostname="pkrvm7jw40e0xgp" tests="3" failures="0" errors="0" skipped="0" time="0.003571627">
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 객체와 키를 입력했을 때, 정상적으로 객체에서 속성이 제거되어야한다." time="0.001913908">
        </testcase>
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 객체와 키를 입력했을 때, 제거할 키가 객체에 없으면 원본 객체가 반환되어야한다." time="0.000206055">
        </testcase>
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 빈 객체와 키를 입력했을 때, 빈 객체가 반환되어야한다." time="0.000258283">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/buildQueryString/index.test.ts" timestamp="2025-09-08T06:13:05.958Z" hostname="pkrvm7jw40e0xgp" tests="9" failures="0" errors="0" skipped="0" time="0.005554083">
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 빈 객체에 대해 빈 문자열을 반환한다" time="0.001522777">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 단일 키-값 쌍을 쿼리 문자열로 변환한다" time="0.000280805">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 여러 키-값 쌍을 쿼리 문자열로 변환한다" time="0.000196187">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 숫자와 불린 값을 문자열로 변환한다" time="0.000300252">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 배열 값을 여러 쿼리 파라미터로 변환한다" time="0.000387705">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; null과 undefined 값을 무시한다" time="0.000235521">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 특수 문자를 URL 인코딩한다" time="0.000190587">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 배열에서 null과 undefined 값을 무시한다" time="0.000201627">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 잘못된 입력에 대해 빈 문자열을 반환한다" time="0.000504432">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/normalizeQuery/index.test.ts" timestamp="2025-09-08T06:13:05.960Z" hostname="pkrvm7jw40e0xgp" tests="8" failures="0" errors="0" skipped="0" time="0.007675447">
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 기본 옵션으로 쿼리를 정규화한다" time="0.002459248">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 대소문자를 소문자로 변환한다" time="0.000465069">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 값 앞뒤 공백을 제거한다" time="0.000390741">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 빈 값 제거를 비활성화할 수 있다" time="0.000485979">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 키를 알파벳 순으로 정렬한다" time="0.00076089">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 배열 값을 처리한다" time="0.000403034">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 모든 옵션을 조합해서 사용한다" time="0.000493403">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 잘못된 입력에 대해 빈 객체를 반환한다" time="0.000468986">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/parseQueryString/index.test.ts" timestamp="2025-09-08T06:13:05.963Z" hostname="pkrvm7jw40e0xgp" tests="7" failures="0" errors="0" skipped="0" time="0.005705677">
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 빈 문자열에 대해 빈 객체를 반환한다" time="0.002097552">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 단일 키-값 쌍을 파싱한다" time="0.000548866">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 여러 키-값 쌍을 파싱한다" time="0.000356877">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 값이 없는 키를 처리한다" time="0.00021388">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 동일한 키에 대한 여러 값을 배열로 처리한다" time="0.000265616">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; URL 인코딩된 문자를 디코딩한다" time="0.000179706">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 잘못된 입력에 대해 빈 객체를 반환한다" time="0.000299851">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/removeEmptyParams/index.test.ts" timestamp="2025-09-08T06:13:05.965Z" hostname="pkrvm7jw40e0xgp" tests="7" failures="0" errors="0" skipped="0" time="0.006628512">
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 빈 객체에 대해 빈 객체를 반환한다" time="0.002237433">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; null, undefined, 빈 문자열 값을 제거한다" time="0.000428211">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 빈 배열을 제거하고 배열에서 빈 값을 필터링한다" time="0.000411279">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 중첩된 객체를 재귀적으로 정리한다" time="0.000493051">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 완전히 빈 중첩 객체를 제거한다" time="0.000495827">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 숫자 0과 불린 false를 유지한다" time="0.000297115">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 잘못된 입력에 대해 빈 객체를 반환한다" time="0.000527586">
        </testcase>
    </testsuite>
    <testsuite name="package/stringUtil/escapeHtml/index.test.ts" timestamp="2025-09-08T06:13:05.967Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.00239096">
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="HTML 특수 문자를 이스케이프한다." time="0.001459278">
        </testcase>
    </testsuite>
    <testsuite name="package/stringUtil/unescapeHtml/index.test.ts" timestamp="2025-09-08T06:13:05.968Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.003061885">
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="HTML 특수 문자를 언이스케이프한다." time="0.001916343">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkBase64/index.test.ts" timestamp="2025-09-08T06:13:05.970Z" hostname="pkrvm7jw40e0xgp" tests="3" failures="0" errors="0" skipped="0" time="0.0046803">
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 유효한 base64 문자열에 대해 true를 반환해야 합니다." time="0.002166764">
        </testcase>
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 유효하지 않은 base64 문자열에 대해 false를 반환해야 합니다." time="0.000328424">
        </testcase>
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 만약 빈 문자열로 함수를 호출할 경우 false를 반환해야 합니다." time="0.000376283">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkDomain/index.test.ts" timestamp="2025-09-08T06:13:05.971Z" hostname="pkrvm7jw40e0xgp" tests="2" failures="0" errors="0" skipped="0" time="0.003775388">
        <testcase classname="package/validationUtil/checkDomain/index.test.ts" name="checkDomain 유틸 함수 테스트 &gt; 유효한 도메인이 들어오는 경우 true를 반환한다." time="0.002050744">
        </testcase>
        <testcase classname="package/validationUtil/checkDomain/index.test.ts" name="checkDomain 유틸 함수 테스트 &gt; 유효하지 않은 도메인이 들어오는 경우 false를 반환한다." time="0.000351668">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkEmail/index.test.ts" timestamp="2025-09-08T06:13:05.972Z" hostname="pkrvm7jw40e0xgp" tests="2" failures="0" errors="0" skipped="0" time="0.002633663">
        <testcase classname="package/validationUtil/checkEmail/index.test.ts" name="올바른 이메일인 경우 true 값을 리턴합니다." time="0.001528047">
        </testcase>
        <testcase classname="package/validationUtil/checkEmail/index.test.ts" name="올바르지 않은 이메일인 경우 false 값을 리턴합니다." time="0.000198531">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkHttpUrl/index.test.ts" timestamp="2025-09-08T06:13:05.973Z" hostname="pkrvm7jw40e0xgp" tests="16" failures="0" errors="0" skipped="0" time="0.007973566">
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://example.com&apos;에 대해 true를 반환한다" time="0.002164557">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://example.com&apos;에 대해 true를 반환한다" time="0.000235511">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://www.example.com&apos;에 대해 true를 반환한다" time="0.000316301">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://example.com/path/to/resource&apos;에 대해 true를 반환한다" time="0.00025672">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://example.com?query=123&amp;key=value&apos;에 대해 true를 반환한다" time="0.000286616">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://localhost:3000&apos;에 대해 true를 반환한다" time="0.000189946">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://sub.domain.co.uk/page#section&apos;에 대해 true를 반환한다" time="0.000173445">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;www.example.com&apos;에 대해 false를 반환한다" time="0.000215132">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;example.com&apos;에 대해 false를 반환한다" time="0.000357359">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;/relative/path&apos;에 대해 false를 반환한다" time="0.000247843">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;ftp://example.com&apos;에 대해 false를 반환한다" time="0.000207037">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;mailto:test@example.com&apos;에 대해 false를 반환한다" time="0.000158907">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;http:// example.com&apos;에 대해 false를 반환한다" time="0.000278772">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;https://&apos;에 대해 false를 반환한다" time="0.000503972">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;just a random string&apos;에 대해 false를 반환한다" time="0.000233336">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;&apos;에 대해 false를 반환한다" time="0.000254687">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkPassword/index.test.ts" timestamp="2025-09-08T06:13:05.978Z" hostname="pkrvm7jw40e0xgp" tests="6" failures="0" errors="0" skipped="0" time="0.003907926">
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 기본 상태는 아무 옵션도 설정되어있지 않기 때문에 true를 반환해야 합니다." time="0.001378247">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 특수 문자가 필요한 경우 true를 반환해야 합니다." time="0.000231733">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 대문자가 필요한 경우 true를 반환해야 합니다." time="0.000302265">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 최소 3자, 최대 5자의 길이를 가져야 하는 경우 true를 반환해야 합니다." time="0.000187992">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효하지 않은 비밀번호에 대해 false를 반환해야 합니다. &gt; 길이가 유효하지 않은 경우 false를 반환해야 합니다." time="0.000229288">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효하지 않은 비밀번호에 대해 false를 반환해야 합니다. &gt; 특수 문자가 없는 경우 false를 반환해야 합니다." time="0.000163506">
        </testcase>
    </testsuite>
</testsuites>
