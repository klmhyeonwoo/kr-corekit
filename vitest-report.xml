<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="140" failures="0" errors="0" time="0.123717295">
    <testsuite name="package/commonUtil/copyToClipboard/index.test.ts" timestamp="2025-09-26T01:21:33.537Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.008729203">
        <testcase classname="package/commonUtil/copyToClipboard/index.test.ts" name="copyToClipboard &gt; 성공 케이스 &gt; 최신 Clipboard API를 사용하여 성공적으로 복사한다" time="0.004506531">
        </testcase>
        <testcase classname="package/commonUtil/copyToClipboard/index.test.ts" name="copyToClipboard &gt; 성공 케이스 &gt; Clipboard API 실패 시, 레거시 execCommand 방식으로 대체하여 성공적으로 복사한다" time="0.001072359">
        </testcase>
        <testcase classname="package/commonUtil/copyToClipboard/index.test.ts" name="copyToClipboard &gt; 실패 및 예외 케이스 &gt; 두 가지 방식 모두 실패하면 false를 반환한다" time="0.000690707">
        </testcase>
        <testcase classname="package/commonUtil/copyToClipboard/index.test.ts" name="copyToClipboard &gt; 실패 및 예외 케이스 &gt; 빈 문자열도 성공적으로 복사한다" time="0.000296833">
        </testcase>
        <testcase classname="package/commonUtil/copyToClipboard/index.test.ts" name="copyToClipboard &gt; 실패 및 예외 케이스 &gt; 매우 긴 텍스트가 주어지면 에러를 던지고 대체(fallback) 로직으로 복사를 시도한다" time="0.000447434">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/decodeBase64/index.test.ts" timestamp="2025-09-26T01:21:33.538Z" hostname="runnervm3ublj" tests="6" failures="0" errors="0" skipped="0" time="0.004827429">
        <testcase classname="package/commonUtil/decodeBase64/index.test.ts" name="decodeBase64 유틸 함수 테스트 &gt; 정상적인 Base64 문자열을 디코딩해야 한다" time="0.001789636">
        </testcase>
        <testcase classname="package/commonUtil/decodeBase64/index.test.ts" name="decodeBase64 유틸 함수 테스트 &gt; 빈 문자열을 디코딩하면 빈 문자열을 반환해야 한다" time="0.00022524">
        </testcase>
        <testcase classname="package/commonUtil/decodeBase64/index.test.ts" name="decodeBase64 유틸 함수 테스트 &gt; 특수 문자가 포함된 Base64 문자열을 올바르게 디코딩해야 한다" time="0.000232023">
        </testcase>
        <testcase classname="package/commonUtil/decodeBase64/index.test.ts" name="decodeBase64 유틸 함수 테스트 &gt; 유니코드 문자가 포함된 Base64 문자열을 올바르게 디코딩해야 한다" time="0.000359591">
        </testcase>
        <testcase classname="package/commonUtil/decodeBase64/index.test.ts" name="decodeBase64 유틸 함수 테스트 &gt; null 또는 undefined를 디코딩하면 그대로 반환해야 한다" time="0.000350583">
        </testcase>
        <testcase classname="package/commonUtil/decodeBase64/index.test.ts" name="decodeBase64 유틸 함수 테스트 &gt; 한글이 들어오면 올바르게 디코딩해야 한다" time="0.000221122">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/encodeBase64/index.test.ts" timestamp="2025-09-26T01:21:33.540Z" hostname="runnervm3ublj" tests="6" failures="0" errors="0" skipped="0" time="0.004987988">
        <testcase classname="package/commonUtil/encodeBase64/index.test.ts" name="encodeBase64 유틸 함수 테스트 &gt; 정상적인 문자열을 Base64로 인코딩해야 한다" time="0.001801288">
        </testcase>
        <testcase classname="package/commonUtil/encodeBase64/index.test.ts" name="encodeBase64 유틸 함수 테스트 &gt; 빈 문자열을 인코딩하면 빈 문자열을 반환해야 한다" time="0.000234227">
        </testcase>
        <testcase classname="package/commonUtil/encodeBase64/index.test.ts" name="encodeBase64 유틸 함수 테스트 &gt; 특수 문자가 포함된 문자열을 올바르게 인코딩해야 한다" time="0.000249385">
        </testcase>
        <testcase classname="package/commonUtil/encodeBase64/index.test.ts" name="encodeBase64 유틸 함수 테스트 &gt; 유니코드 문자가 포함된 문자열을 올바르게 인코딩해야 한다" time="0.000379667">
        </testcase>
        <testcase classname="package/commonUtil/encodeBase64/index.test.ts" name="encodeBase64 유틸 함수 테스트 &gt; null 또는 undefined를 인코딩하면 그대로 반환해야 한다" time="0.000372795">
        </testcase>
        <testcase classname="package/commonUtil/encodeBase64/index.test.ts" name="encodeBase64 유틸 함수 테스트 &gt; 한글이 들어오면 올바르게 인코딩해야 한다" time="0.000234056">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/isEmpty/index.test.ts" timestamp="2025-09-26T01:21:33.542Z" hostname="runnervm3ublj" tests="16" failures="0" errors="0" skipped="0" time="0.00850853">
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 문자열에 대해 false를 반환한다" time="0.001772985">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 0이 아닌 숫자에 대해 false를 반환한다" time="0.000602934">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 배열에 대해 false를 반환한다" time="0.000511844">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 0에 대해 false를 반환한다" time="0.000330887">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 객체에 대해 false를 반환한다" time="0.000385348">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 불린 값에 대해 false를 반환한다" time="0.000239617">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 문자열에 대해 true를 반환한다" time="0.000225611">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 배열에 대해 true를 반환한다" time="0.000240117">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 객체에 대해 true를 반환한다" time="0.000293347">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; null과 undefined에 대해 true를 반환한다" time="0.000290482">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; NaN을 처리한다" time="0.000187761">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; Date 객체를 처리한다" time="0.00022508">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; Set과 Map을 처리한다" time="0.000358478">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 함수를 처리한다" time="0.000499811">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 심볼을 처리한다" time="0.000217926">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 빈 심볼의 경우 true를 반환한다" time="0.000274251">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/isNull/index.test.ts" timestamp="2025-09-26T01:21:33.545Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.004418557">
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; null이 들어오는 경우 true를 반환한다." time="0.001770219">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; undefined이 들어오는 경우 false를 반환한다." time="0.000221924">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 빈 문자열이 들어오는 경우 false를 반환한다." time="0.000210041">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 공백 문자열이 들어오는 경우 false를 반환한다." time="0.000404474">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 0이 들어오는 경우 false를 반환한다." time="0.000297375">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/sleep/index.test.ts" timestamp="2025-09-26T01:21:33.546Z" hostname="runnervm3ublj" tests="4" failures="0" errors="0" skipped="0" time="0.008908798">
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 지정된 시간(ms) 이후에 resolve 되어야 한다" time="0.004113448">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 지정된 시간 이전에는 resolve 되면 안 된다" time="0.00183462">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; ms가 0일 때 다음 틱(tick)에 resolve 되어야 한다" time="0.000887584">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 음수 값은 0처럼 처리되어야 한다" time="0.000817063">
        </testcase>
    </testsuite>
    <testsuite name="package/formatUtil/formatPhoneNumber/index.test.ts" timestamp="2025-09-26T01:21:33.547Z" hostname="runnervm3ublj" tests="14" failures="0" errors="0" skipped="0" time="0.00726344">
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 휴대폰 번호 &gt; 11자리 휴대폰 번호에 하이픈을 올바르게 추가한다 (010)" time="0.001837886">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 휴대폰 번호 &gt; 11자리 휴대폰 번호에 하이픈을 올바르게 추가한다 (011)" time="0.000313404">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 휴대폰 번호 &gt; 중간에 공백이나 하이픈이 있어도 숫자를 제외하고 올바르게 처리한다" time="0.000337509">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 지역번호 &gt; 서울 지역번호(02) 9자리에 하이픈을 올바르게 추가한다" time="0.000391058">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 지역번호 &gt; 서울 지역번호(02) 10자리에 하이픈을 올바르게 추가한다" time="0.000226041">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 지역번호 &gt; 서울 외 지역번호(031) 10자리에 하이픈을 올바르게 추가한다" time="0.000242101">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 지역번호 &gt; 서울 외 지역번호(054) 10자리에 하이픈을 올바르게 추가한다" time="0.000250578">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 대표번호 &gt; 8자리 대표번호(1588)에 하이픈을 올바르게 추가한다" time="0.000222224">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 대표번호 &gt; 8자리 대표번호(1670)에 하이픈을 올바르게 추가한다" time="0.000292636">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 예외 케이스 &gt; 빈 문자열을 입력하면 빈 문자열을 반환한다" time="0.000195745">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 예외 케이스 &gt; null 또는 undefined를 입력하면 빈 문자열을 반환한다" time="0.000210753">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 예외 케이스 &gt; 숫자가 아닌 문자가 포함된 경우, 해당 문자를 제거하고 포맷팅한다" time="0.000224809">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 예외 케이스 &gt; 어떤 형식에도 맞지 않는 짧은 길이라면 숫자만 반환한다" time="0.000137176">
        </testcase>
        <testcase classname="package/formatUtil/formatPhoneNumber/index.test.ts" name="formatPhoneNumber &gt; 예외 케이스 &gt; 어떤 형식에도 맞지 않는 긴 길이라면 숫자만 반환한다" time="0.000314175">
        </testcase>
    </testsuite>
    <testsuite name="package/deviceUtil/getDevice/index.test.ts" timestamp="2025-09-26T01:21:33.550Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.006348347">
        <testcase classname="package/deviceUtil/getDevice/index.test.ts" name="getDevice &gt; 클라이언트 (브라우저) 환경 &gt; 데스크톱 &gt; Windows Chrome User Agent를 데스크톱으로 인식해야 합니다" time="0.003319581">
        </testcase>
        <testcase classname="package/deviceUtil/getDevice/index.test.ts" name="getDevice &gt; 클라이언트 (브라우저) 환경 &gt; 모바일 &gt; iPhone User Agent를 모바일 및 iOS로 인식해야 합니다" time="0.000599938">
        </testcase>
        <testcase classname="package/deviceUtil/getDevice/index.test.ts" name="getDevice &gt; 클라이언트 (브라우저) 환경 &gt; 모바일 &gt; Android Phone User Agent를 모바일 및 Android로 인식해야 합니다" time="0.000260215">
        </testcase>
        <testcase classname="package/deviceUtil/getDevice/index.test.ts" name="getDevice &gt; 클라이언트 (브라우저) 환경 &gt; 태블릿 &gt; iPad User Agent를 태블릿 및 iOS로 인식해야 합니다" time="0.000211053">
        </testcase>
        <testcase classname="package/deviceUtil/getDevice/index.test.ts" name="getDevice &gt; 클라이언트 (브라우저) 환경 &gt; 태블릿 &gt; Android Tablet User Agent를 태블릿 및 Android로 인식해야 합니다" time="0.000328332">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/multiply/index.test.ts" timestamp="2025-09-26T01:21:33.551Z" hostname="runnervm3ublj" tests="9" failures="0" errors="0" skipped="0" time="0.005403142">
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 두 양수를 올바르게 곱한다" time="0.001522187">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 여러 숫자를 올바르게 곱한다" time="0.000307554">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 인수 중 0이 포함되면 0을 반환한다" time="0.000306361">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 음수를 올바르게 처리한다" time="0.000384867">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000191056">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수가 없을 때 1을 반환한다" time="0.000184554">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000310468">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000310409">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; Infinity(무한대)를 올바르게 처리한다" time="0.00045098">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/subtract/index.test.ts" timestamp="2025-09-26T01:21:33.553Z" hostname="runnervm3ublj" tests="8" failures="0" errors="0" skipped="0" time="0.004976316">
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 두 양수를 올바르게 뺀다" time="0.001242716">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 여러 숫자를 순서대로 뺀다" time="0.000219499">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 음수를 포함한 뺄셈을 올바르게 처리한다" time="0.00028963">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수가 없을 때 0을 반환한다" time="0.000261938">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000256318">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 0을 포함한 뺄셈을 올바르게 처리한다" time="0.000323533">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000274451">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000204902">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/sum/index.test.ts" timestamp="2025-09-26T01:21:33.554Z" hostname="runnervm3ublj" tests="7" failures="0" errors="0" skipped="0" time="0.004148964">
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 기본 케이스 &gt; 1 + 2 + 3은 6이다." time="0.001257374">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 기본 케이스 &gt; 5 + 10 + 15는 30이다." time="0.000220832">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수가 없을 때 0을 반환한다" time="0.000212035">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000301503">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 음수를 포함한 덧셈을 올바르게 처리한다" time="0.000153937">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000180587">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000157042">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/clearNullProperties/index.test.ts" timestamp="2025-09-26T01:21:33.556Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.004138514">
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 Null이 객체에 존재한다면, Null이 없는 객체가 반환된다." time="0.00187182">
        </testcase>
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 배열이 포함된 객체가 존재한다면, 그대로 반환된다." time="0.0002948">
        </testcase>
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 중첩된 객체가 존재한다면, 중첩된 객체의 Null도 제거된다." time="0.000228206">
        </testcase>
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 모든 속성이 Null이라면, 빈 객체가 반환된다." time="0.000236821">
        </testcase>
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 속성에 false 값이 존재한다면, false 값은 유지된다." time="0.000224839">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/deepFreeze/index.test.ts" timestamp="2025-09-26T01:21:33.557Z" hostname="runnervm3ublj" tests="1" failures="0" errors="0" skipped="0" time="0.002400825">
        <testcase classname="package/objectUtil/deepFreeze/index.test.ts" name="객체의 불변성이 유지된다." time="0.001455283">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/removeKey/index.test.ts" timestamp="2025-09-26T01:21:33.557Z" hostname="runnervm3ublj" tests="3" failures="0" errors="0" skipped="0" time="0.004354217">
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 객체와 키를 입력했을 때, 정상적으로 객체에서 속성이 제거되어야한다." time="0.002334091">
        </testcase>
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 객체와 키를 입력했을 때, 제거할 키가 객체에 없으면 원본 객체가 반환되어야한다." time="0.000328572">
        </testcase>
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 빈 객체와 키를 입력했을 때, 빈 객체가 반환되어야한다." time="0.000224869">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/getAllQuery/index.test.ts" timestamp="2025-09-26T01:21:33.558Z" hostname="runnervm3ublj" tests="2" failures="0" errors="0" skipped="0" time="0.00523528">
        <testcase classname="package/searchQueryUtil/getAllQuery/index.test.ts" name="getAll 유틸 함수 테스트 &gt; 여러 개의 동일한 키가 있는 쿼리 스트링을 올바르게 처리해야 함" time="0.003319658">
        </testcase>
        <testcase classname="package/searchQueryUtil/getAllQuery/index.test.ts" name="getAll 유틸 함수 테스트 &gt; 여러 키-값 쌍이 있는 쿼리 스트링을 올바르게 처리해야 함" time="0.000510943">
        </testcase>
    </testsuite>
    <testsuite name="package/stringUtil/escapeHtml/index.test.ts" timestamp="2025-09-26T01:21:33.559Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.004685023">
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="escapeHtml 유틸 함수 테스트 &gt; HTML 특수 문자를 올바르게 이스케이프한다" time="0.001705739">
        </testcase>
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="escapeHtml 유틸 함수 테스트 &gt; 여러 HTML 특수 문자를 포함한 문자열을 올바르게 이스케이프한다" time="0.000228736">
        </testcase>
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="escapeHtml 유틸 함수 테스트 &gt; HTML 특수 문자가 없는 문자열은 그대로 반환한다" time="0.000209872">
        </testcase>
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="escapeHtml 유틸 함수 테스트 &gt; 빈 문자열을 입력하면 빈 문자열을 반환한다" time="0.00037028">
        </testcase>
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="escapeHtml 유틸 함수 테스트 &gt; null 또는 undefined를 입력하면 그대로 반환한다" time="0.000382643">
        </testcase>
    </testsuite>
    <testsuite name="package/stringUtil/unescapeHtml/index.test.ts" timestamp="2025-09-26T01:21:33.560Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.00474275">
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="HTML 특수 문자를 언이스케이프한다." time="0.001938794">
        </testcase>
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="unescapeHtml 유틸 함수 테스트 &gt; 여러 HTML 특수 문자를 포함한 문자열을 올바르게 언이스케이프한다" time="0.000250157">
        </testcase>
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="unescapeHtml 유틸 함수 테스트 &gt; HTML 특수 문자가 없는 문자열은 그대로 반환한다" time="0.000217686">
        </testcase>
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="unescapeHtml 유틸 함수 테스트 &gt; 빈 문자열을 입력하면 빈 문자열을 반환한다" time="0.000420814">
        </testcase>
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="unescapeHtml 유틸 함수 테스트 &gt; null 또는 undefined를 입력하면 그대로 반환한다" time="0.000312994">
        </testcase>
    </testsuite>
    <testsuite name="package/typeUtil/isPlainObject/index.test.ts" timestamp="2025-09-26T01:21:33.561Z" hostname="runnervm3ublj" tests="5" failures="0" errors="0" skipped="0" time="0.004529443">
        <testcase classname="package/typeUtil/isPlainObject/index.test.ts" name="isPlainObject 유틸 함수 테스트 &gt; 일반 객체는 true를 반환한다" time="0.001745183">
        </testcase>
        <testcase classname="package/typeUtil/isPlainObject/index.test.ts" name="isPlainObject 유틸 함수 테스트 &gt; 배열은 false를 반환한다" time="0.000231792">
        </testcase>
        <testcase classname="package/typeUtil/isPlainObject/index.test.ts" name="isPlainObject 유틸 함수 테스트 &gt; null은 false를 반환한다" time="0.000234216">
        </testcase>
        <testcase classname="package/typeUtil/isPlainObject/index.test.ts" name="isPlainObject 유틸 함수 테스트 &gt; 날짜 객체는 false를 반환한다" time="0.000388745">
        </testcase>
        <testcase classname="package/typeUtil/isPlainObject/index.test.ts" name="isPlainObject 유틸 함수 테스트 &gt; 커스텀 프로토타입을 가진 객체는 false를 반환한다" time="0.000294519">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkBase64/index.test.ts" timestamp="2025-09-26T01:21:33.562Z" hostname="runnervm3ublj" tests="3" failures="0" errors="0" skipped="0" time="0.004292201">
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 유효한 base64 문자열에 대해 true를 반환해야 합니다." time="0.002196935">
        </testcase>
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 유효하지 않은 base64 문자열에 대해 false를 반환해야 합니다." time="0.000373888">
        </testcase>
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 만약 빈 문자열로 함수를 호출할 경우 false를 반환해야 합니다." time="0.000285322">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkDomain/index.test.ts" timestamp="2025-09-26T01:21:33.563Z" hostname="runnervm3ublj" tests="2" failures="0" errors="0" skipped="0" time="0.003293499">
        <testcase classname="package/validationUtil/checkDomain/index.test.ts" name="checkDomain 유틸 함수 테스트 &gt; 유효한 도메인이 들어오는 경우 true를 반환한다." time="0.001722692">
        </testcase>
        <testcase classname="package/validationUtil/checkDomain/index.test.ts" name="checkDomain 유틸 함수 테스트 &gt; 유효하지 않은 도메인이 들어오는 경우 false를 반환한다." time="0.000308615">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkEmail/index.test.ts" timestamp="2025-09-26T01:21:33.564Z" hostname="runnervm3ublj" tests="2" failures="0" errors="0" skipped="0" time="0.002667222">
        <testcase classname="package/validationUtil/checkEmail/index.test.ts" name="올바른 이메일인 경우 true 값을 리턴합니다." time="0.001454552">
        </testcase>
        <testcase classname="package/validationUtil/checkEmail/index.test.ts" name="올바르지 않은 이메일인 경우 false 값을 리턴합니다." time="0.000188171">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkHttpUrl/index.test.ts" timestamp="2025-09-26T01:21:33.564Z" hostname="runnervm3ublj" tests="16" failures="0" errors="0" skipped="0" time="0.009613982">
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://example.com&apos;에 대해 true를 반환한다" time="0.001669933">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://example.com&apos;에 대해 true를 반환한다" time="0.000507536">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://www.example.com&apos;에 대해 true를 반환한다" time="0.000430993">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://example.com/path/to/resource&apos;에 대해 true를 반환한다" time="0.000518226">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://example.com?query=123&amp;key=value&apos;에 대해 true를 반환한다" time="0.000561136">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://localhost:3000&apos;에 대해 true를 반환한다" time="0.000345133">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://sub.domain.co.uk/page#section&apos;에 대해 true를 반환한다" time="0.000781968">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;www.example.com&apos;에 대해 false를 반환한다" time="0.000344373">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;example.com&apos;에 대해 false를 반환한다" time="0.000395788">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;/relative/path&apos;에 대해 false를 반환한다" time="0.000227414">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;ftp://example.com&apos;에 대해 false를 반환한다" time="0.000534486">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;mailto:test@example.com&apos;에 대해 false를 반환한다" time="0.000444839">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;http:// example.com&apos;에 대해 false를 반환한다" time="0.000398082">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;https://&apos;에 대해 false를 반환한다" time="0.000286815">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;just a random string&apos;에 대해 false를 반환한다" time="0.00020398">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;&apos;에 대해 false를 반환한다" time="0.000179955">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkPassword/index.test.ts" timestamp="2025-09-26T01:21:33.569Z" hostname="runnervm3ublj" tests="6" failures="0" errors="0" skipped="0" time="0.005243625">
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 기본 상태는 아무 옵션도 설정되어있지 않기 때문에 true를 반환해야 합니다." time="0.001829431">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 특수 문자가 필요한 경우 true를 반환해야 합니다." time="0.000284019">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 대문자가 필요한 경우 true를 반환해야 합니다." time="0.000387672">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 최소 3자, 최대 5자의 길이를 가져야 하는 경우 true를 반환해야 합니다." time="0.000385258">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효하지 않은 비밀번호에 대해 false를 반환해야 합니다. &gt; 길이가 유효하지 않은 경우 false를 반환해야 합니다." time="0.000260645">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효하지 않은 비밀번호에 대해 false를 반환해야 합니다. &gt; 특수 문자가 없는 경우 false를 반환해야 합니다." time="0.000223657">
        </testcase>
    </testsuite>
</testsuites>
