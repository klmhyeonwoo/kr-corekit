<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="116" failures="0" errors="0" time="0.102972382">
    <testsuite name="package/commonUtil/isEmpty/index.test.ts" timestamp="2025-09-08T06:10:16.642Z" hostname="pkrvm7jw40e0xgp" tests="16" failures="0" errors="0" skipped="0" time="0.008145682">
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 문자열에 대해 false를 반환한다" time="0.00192045">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 0이 아닌 숫자에 대해 false를 반환한다" time="0.00055799">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 배열에 대해 false를 반환한다" time="0.000431945">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 0에 대해 false를 반환한다" time="0.000226572">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 비어있지 않은 객체에 대해 false를 반환한다" time="0.00036504">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 비어있지 않은 값에 대해 false를 반환해야 함 &gt; 불린 값에 대해 false를 반환한다" time="0.000208889">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 문자열에 대해 true를 반환한다" time="0.000213147">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 배열에 대해 true를 반환한다" time="0.000173033">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; 빈 객체에 대해 true를 반환한다" time="0.000273199">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 빈 값에 대해 true를 반환해야 함 &gt; null과 undefined에 대해 true를 반환한다" time="0.000331157">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; NaN을 처리한다" time="0.000191297">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; Date 객체를 처리한다" time="0.000235208">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; Set과 Map을 처리한다" time="0.000309117">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 함수를 처리한다" time="0.000487608">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 심볼을 처리한다" time="0.000152765">
        </testcase>
        <testcase classname="package/commonUtil/isEmpty/index.test.ts" name="isEmpty 유틸 함수 테스트 &gt; 엣지 케이스 &gt; 빈 심볼의 경우 true를 반환한다" time="0.000104084">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/isNull/index.test.ts" timestamp="2025-09-08T06:10:16.647Z" hostname="pkrvm7jw40e0xgp" tests="5" failures="0" errors="0" skipped="0" time="0.004708426">
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; null이 들어오는 경우 true를 반환한다." time="0.00190995">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; undefined이 들어오는 경우 false를 반환한다." time="0.000261418">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 빈 문자열이 들어오는 경우 false를 반환한다." time="0.000310058">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 공백 문자열이 들어오는 경우 false를 반환한다." time="0.000342117">
        </testcase>
        <testcase classname="package/commonUtil/isNull/index.test.ts" name="isNull 유틸 함수 테스트 &gt; 0이 들어오는 경우 false를 반환한다." time="0.000327471">
        </testcase>
    </testsuite>
    <testsuite name="package/commonUtil/sleep/index.test.ts" timestamp="2025-09-08T06:10:16.649Z" hostname="pkrvm7jw40e0xgp" tests="4" failures="0" errors="0" skipped="0" time="0.012875147">
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 지정된 시간(ms) 이후에 resolve 되어야 한다" time="0.0062456">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 지정된 시간 이전에는 resolve 되면 안 된다" time="0.002737482">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; ms가 0일 때 다음 틱(tick)에 resolve 되어야 한다" time="0.001280096">
        </testcase>
        <testcase classname="package/commonUtil/sleep/index.test.ts" name="sleep &gt; 음수 값은 0처럼 처리되어야 한다" time="0.000943208">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/subtract/index.test.ts" timestamp="2025-09-08T06:10:16.650Z" hostname="pkrvm7jw40e0xgp" tests="8" failures="0" errors="0" skipped="0" time="0.005050003">
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 두 양수를 올바르게 뺀다" time="0.001648142">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 여러 숫자를 순서대로 뺀다" time="0.000226792">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 기본 케이스 &gt; 음수를 포함한 뺄셈을 올바르게 처리한다" time="0.000362816">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수가 없을 때 0을 반환한다" time="0.000233134">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000197588">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 0을 포함한 뺄셈을 올바르게 처리한다" time="0.00029509">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000285713">
        </testcase>
        <testcase classname="package/numberUtil/subtract/index.test.ts" name="subtract &gt; 예외 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000196036">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/multiply/index.test.ts" timestamp="2025-09-08T06:10:16.653Z" hostname="pkrvm7jw40e0xgp" tests="9" failures="0" errors="0" skipped="0" time="0.00485559">
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 두 양수를 올바르게 곱한다" time="0.001254258">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 여러 숫자를 올바르게 곱한다" time="0.000189753">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 인수 중 0이 포함되면 0을 반환한다" time="0.000202898">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 음수를 올바르게 처리한다" time="0.000326409">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 기본 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000124583">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수가 없을 때 1을 반환한다" time="0.00013409">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000251168">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000439649">
        </testcase>
        <testcase classname="package/numberUtil/multiply/index.test.ts" name="multiply &gt; 엣지 케이스 &gt; Infinity(무한대)를 올바르게 처리한다" time="0.000406798">
        </testcase>
    </testsuite>
    <testsuite name="package/numberUtil/sum/index.test.ts" timestamp="2025-09-08T06:10:16.655Z" hostname="pkrvm7jw40e0xgp" tests="7" failures="0" errors="0" skipped="0" time="0.004004393">
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 기본 케이스 &gt; 1 + 2 + 3은 6이다." time="0.001224893">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 기본 케이스 &gt; 5 + 10 + 15는 30이다." time="0.00023042">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수가 없을 때 0을 반환한다" time="0.000223096">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수가 하나일 때 해당 숫자 자신을 반환한다" time="0.000242752">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 음수를 포함한 덧셈을 올바르게 처리한다" time="0.00020411">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 부동소수점을 올바르게 처리한다" time="0.000196756">
        </testcase>
        <testcase classname="package/numberUtil/sum/index.test.ts" name="sum &gt; 예외 케이스 &gt; 인수 중 NaN이 포함되면 NaN을 반환한다" time="0.000148777">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/clearNullProperties/index.test.ts" timestamp="2025-09-08T06:10:16.656Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.003915779">
        <testcase classname="package/objectUtil/clearNullProperties/index.test.ts" name="만약 Null이 객체에 존재한다면, Null이 없는 객체가 반환된다." time="0.00254328">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/deepFreeze/index.test.ts" timestamp="2025-09-08T06:10:16.657Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.002986205">
        <testcase classname="package/objectUtil/deepFreeze/index.test.ts" name="객체의 불변성이 유지된다." time="0.001797951">
        </testcase>
    </testsuite>
    <testsuite name="package/objectUtil/removeKey/index.test.ts" timestamp="2025-09-08T06:10:16.657Z" hostname="pkrvm7jw40e0xgp" tests="3" failures="0" errors="0" skipped="0" time="0.003437276">
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 객체와 키를 입력했을 때, 정상적으로 객체에서 속성이 제거되어야한다." time="0.001903398">
        </testcase>
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 객체와 키를 입력했을 때, 제거할 키가 객체에 없으면 원본 객체가 반환되어야한다." time="0.000211825">
        </testcase>
        <testcase classname="package/objectUtil/removeKey/index.test.ts" name="removeKey 유틸 함수 테스트 &gt; 빈 객체와 키를 입력했을 때, 빈 객체가 반환되어야한다." time="0.000216574">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/buildQueryString/index.test.ts" timestamp="2025-09-08T06:10:16.658Z" hostname="pkrvm7jw40e0xgp" tests="9" failures="0" errors="0" skipped="0" time="0.006375743">
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 빈 객체에 대해 빈 문자열을 반환한다" time="0.00185088">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 단일 키-값 쌍을 쿼리 문자열로 변환한다" time="0.000254044">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 여러 키-값 쌍을 쿼리 문자열로 변환한다" time="0.000220692">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 숫자와 불린 값을 문자열로 변환한다" time="0.00037031">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 배열 값을 여러 쿼리 파라미터로 변환한다" time="0.000414783">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; null과 undefined 값을 무시한다" time="0.000242262">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 특수 문자를 URL 인코딩한다" time="0.000191877">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 배열에서 null과 undefined 값을 무시한다" time="0.00019335">
        </testcase>
        <testcase classname="package/searchQueryUtil/buildQueryString/index.test.ts" name="buildQueryString &gt; 잘못된 입력에 대해 빈 문자열을 반환한다" time="0.00052003">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/normalizeQuery/index.test.ts" timestamp="2025-09-08T06:10:16.660Z" hostname="pkrvm7jw40e0xgp" tests="8" failures="0" errors="0" skipped="0" time="0.005131596">
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 기본 옵션으로 쿼리를 정규화한다" time="0.00173198">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 대소문자를 소문자로 변환한다" time="0.000285853">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 값 앞뒤 공백을 제거한다" time="0.000181438">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 빈 값 제거를 비활성화할 수 있다" time="0.00028944">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 키를 알파벳 순으로 정렬한다" time="0.000414873">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 배열 값을 처리한다" time="0.000226191">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 모든 옵션을 조합해서 사용한다" time="0.000330616">
        </testcase>
        <testcase classname="package/searchQueryUtil/normalizeQuery/index.test.ts" name="normalizeQuery &gt; 잘못된 입력에 대해 빈 객체를 반환한다" time="0.000220261">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/parseQueryString/index.test.ts" timestamp="2025-09-08T06:10:16.662Z" hostname="pkrvm7jw40e0xgp" tests="7" failures="0" errors="0" skipped="0" time="0.006201228">
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 빈 문자열에 대해 빈 객체를 반환한다" time="0.002409531">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 단일 키-값 쌍을 파싱한다" time="0.000588927">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 여러 키-값 쌍을 파싱한다" time="0.000451431">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 값이 없는 키를 처리한다" time="0.000268501">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 동일한 키에 대한 여러 값을 배열로 처리한다" time="0.000360301">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; URL 인코딩된 문자를 디코딩한다" time="0.000197688">
        </testcase>
        <testcase classname="package/searchQueryUtil/parseQueryString/index.test.ts" name="parseQueryString &gt; 잘못된 입력에 대해 빈 객체를 반환한다" time="0.000350183">
        </testcase>
    </testsuite>
    <testsuite name="package/searchQueryUtil/removeEmptyParams/index.test.ts" timestamp="2025-09-08T06:10:16.664Z" hostname="pkrvm7jw40e0xgp" tests="7" failures="0" errors="0" skipped="0" time="0.006928403">
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 빈 객체에 대해 빈 객체를 반환한다" time="0.002740678">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; null, undefined, 빈 문자열 값을 제거한다" time="0.00040197">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 빈 배열을 제거하고 배열에서 빈 값을 필터링한다" time="0.00040768">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 중첩된 객체를 재귀적으로 정리한다" time="0.00056876">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 완전히 빈 중첩 객체를 제거한다" time="0.000506574">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 숫자 0과 불린 false를 유지한다" time="0.000268531">
        </testcase>
        <testcase classname="package/searchQueryUtil/removeEmptyParams/index.test.ts" name="removeEmptyParams &gt; 잘못된 입력에 대해 빈 객체를 반환한다" time="0.000438678">
        </testcase>
    </testsuite>
    <testsuite name="package/stringUtil/escapeHtml/index.test.ts" timestamp="2025-09-08T06:10:16.665Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.002110037">
        <testcase classname="package/stringUtil/escapeHtml/index.test.ts" name="HTML 특수 문자를 이스케이프한다." time="0.001259576">
        </testcase>
    </testsuite>
    <testsuite name="package/stringUtil/unescapeHtml/index.test.ts" timestamp="2025-09-08T06:10:16.666Z" hostname="pkrvm7jw40e0xgp" tests="1" failures="0" errors="0" skipped="0" time="0.002128742">
        <testcase classname="package/stringUtil/unescapeHtml/index.test.ts" name="HTML 특수 문자를 언이스케이프한다." time="0.001207218">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkBase64/index.test.ts" timestamp="2025-09-08T06:10:16.667Z" hostname="pkrvm7jw40e0xgp" tests="3" failures="0" errors="0" skipped="0" time="0.004751065">
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 유효한 base64 문자열에 대해 true를 반환해야 합니다." time="0.002415993">
        </testcase>
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 유효하지 않은 base64 문자열에 대해 false를 반환해야 합니다." time="0.00034339">
        </testcase>
        <testcase classname="package/validationUtil/checkBase64/index.test.ts" name="checkBase64 유틸 함수 테스트 &gt; 만약 빈 문자열로 함수를 호출할 경우 false를 반환해야 합니다." time="0.000390228">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkDomain/index.test.ts" timestamp="2025-09-08T06:10:16.670Z" hostname="pkrvm7jw40e0xgp" tests="2" failures="0" errors="0" skipped="0" time="0.003742636">
        <testcase classname="package/validationUtil/checkDomain/index.test.ts" name="checkDomain 유틸 함수 테스트 &gt; 유효한 도메인이 들어오는 경우 true를 반환한다." time="0.002046063">
        </testcase>
        <testcase classname="package/validationUtil/checkDomain/index.test.ts" name="checkDomain 유틸 함수 테스트 &gt; 유효하지 않은 도메인이 들어오는 경우 false를 반환한다." time="0.000326178">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkEmail/index.test.ts" timestamp="2025-09-08T06:10:16.671Z" hostname="pkrvm7jw40e0xgp" tests="2" failures="0" errors="0" skipped="0" time="0.003542923">
        <testcase classname="package/validationUtil/checkEmail/index.test.ts" name="올바른 이메일인 경우 true 값을 리턴합니다." time="0.002023681">
        </testcase>
        <testcase classname="package/validationUtil/checkEmail/index.test.ts" name="올바르지 않은 이메일인 경우 false 값을 리턴합니다." time="0.000274431">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkHttpUrl/index.test.ts" timestamp="2025-09-08T06:10:16.675Z" hostname="pkrvm7jw40e0xgp" tests="16" failures="0" errors="0" skipped="0" time="0.007617658">
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://example.com&apos;에 대해 true를 반환한다" time="0.001601304">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://example.com&apos;에 대해 true를 반환한다" time="0.000204531">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://www.example.com&apos;에 대해 true를 반환한다" time="0.000290912">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://example.com/path/to/resource&apos;에 대해 true를 반환한다" time="0.000314216">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://example.com?query=123&amp;key=value&apos;에 대해 true를 반환한다" time="0.000326218">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;http://localhost:3000&apos;에 대해 true를 반환한다" time="0.000203008">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효한 HTTP/HTTPS URL 문자열이 주어졌을 때 &gt; &apos;https://sub.domain.co.uk/page#section&apos;에 대해 true를 반환한다" time="0.000195134">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;www.example.com&apos;에 대해 false를 반환한다" time="0.000245868">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;example.com&apos;에 대해 false를 반환한다" time="0.000404514">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;/relative/path&apos;에 대해 false를 반환한다" time="0.000302433">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;ftp://example.com&apos;에 대해 false를 반환한다" time="0.000194011">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;mailto:test@example.com&apos;에 대해 false를 반환한다" time="0.000170528">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;http:// example.com&apos;에 대해 false를 반환한다" time="0.000290542">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;https://&apos;에 대해 false를 반환한다" time="0.000482409">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;just a random string&apos;에 대해 false를 반환한다" time="0.000197287">
        </testcase>
        <testcase classname="package/validationUtil/checkHttpUrl/index.test.ts" name="URL 유효성 검사 &gt; 유효하지 않은 URL 문자열이 주어졌을 때 &gt; &apos;&apos;에 대해 false를 반환한다" time="0.000209621">
        </testcase>
    </testsuite>
    <testsuite name="package/validationUtil/checkPassword/index.test.ts" timestamp="2025-09-08T06:10:16.680Z" hostname="pkrvm7jw40e0xgp" tests="6" failures="0" errors="0" skipped="0" time="0.00446385">
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 기본 상태는 아무 옵션도 설정되어있지 않기 때문에 true를 반환해야 합니다." time="0.001637882">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 특수 문자가 필요한 경우 true를 반환해야 합니다." time="0.000248663">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 대문자가 필요한 경우 true를 반환해야 합니다." time="0.000338471">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효한 비밀번호에 대해 true를 반환해야 합니다. &gt; 최소 3자, 최대 5자의 길이를 가져야 하는 경우 true를 반환해야 합니다." time="0.000208378">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효하지 않은 비밀번호에 대해 false를 반환해야 합니다. &gt; 길이가 유효하지 않은 경우 false를 반환해야 합니다." time="0.000249044">
        </testcase>
        <testcase classname="package/validationUtil/checkPassword/index.test.ts" name="checkPassword 유틸 함수 테스트 &gt; 유효하지 않은 비밀번호에 대해 false를 반환해야 합니다. &gt; 특수 문자가 없는 경우 false를 반환해야 합니다." time="0.000215432">
        </testcase>
    </testsuite>
</testsuites>
